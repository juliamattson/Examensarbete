{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Layout from \"../Components/Layout\";\nimport client from '../Components/ApolloClient';\nimport Product from \"../Components/Products\";\nimport gql from 'graphql-tag';\nconst PRODUCTS_QUERY = gql`query{\n    products {\n        nodes {\n          ... on SimpleProduct {\n            id\n            name\n            price\n            onSale\n            description\n            purchasable\n            stockQuantity\n          }\n        }\n      }\n}`;\n\nconst Index = props => {\n  console.log(props);\n  const {\n    products\n  } = props;\n  return /*#__PURE__*/_jsx(Layout, {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"product-wrapper\"\n    })\n  });\n};\n\nIndex.getInitialProps = async () => {\n  const result = await client.query({\n    query: PRODUCTS_QUERY\n  });\n  return {\n    products: result.data.products.nodes\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/julia/OneDrive/Dokument/Repository/Examensarbete/pages/index.js"],"names":["Layout","client","Product","gql","PRODUCTS_QUERY","Index","props","console","log","products","getInitialProps","result","query","data","nodes"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,cAAc,GAAGD,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAdA;;AAgBA,MAAME,KAAK,GAAIC,KAAD,IAAW;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeH,KAArB;AACA,sBACI,KAAC,MAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AADJ,IADJ;AASH,CAZD;;AAcAD,KAAK,CAACK,eAAN,GAAwB,YAAY;AAChC,QAAMC,MAAM,GAAG,MAAMV,MAAM,CAACW,KAAP,CAAa;AAAEA,IAAAA,KAAK,EAAER;AAAT,GAAb,CAArB;AACA,SAAO;AACHK,IAAAA,QAAQ,EAAEE,MAAM,CAACE,IAAP,CAAYJ,QAAZ,CAAqBK;AAD5B,GAAP;AAGH,CALD;;AAOA,eAAeT,KAAf","sourcesContent":["import Layout from \"../Components/Layout\";\r\nimport client from '../Components/ApolloClient';\r\nimport Product from \"../Components/Products\";\r\nimport gql from 'graphql-tag';\r\n\r\nconst PRODUCTS_QUERY = gql`query{\r\n    products {\r\n        nodes {\r\n          ... on SimpleProduct {\r\n            id\r\n            name\r\n            price\r\n            onSale\r\n            description\r\n            purchasable\r\n            stockQuantity\r\n          }\r\n        }\r\n      }\r\n}`;\r\n\r\nconst Index = (props) => {\r\n    console.log(props)\r\n    const { products } = props;\r\n    return (\r\n        <Layout>\r\n            <div className=\"product-wrapper\">\r\n                {/*   {products.length ? (\r\n                    products.map(product => <Product product={product} key={product.id} />)\r\n                ) : ''} */}\r\n            </div>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nIndex.getInitialProps = async () => {\r\n    const result = await client.query({ query: PRODUCTS_QUERY });\r\n    return {\r\n        products: result.data.products.nodes\r\n    }\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}